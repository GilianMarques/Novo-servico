// <auto-generated />
//
// To parse this JSON data, add NuGet 'Newtonsoft.Json' then do:
//
//    using QuickType;
//
//    var contaAzulResponse = ContaAzulResponse.FromJson(jsonString);

namespace conta_azul
{
    using System;
    using System.Collections.Generic;

    using System.Globalization;
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    public partial class ContaAzulCredModel
    {
        public ContaAzulCredModel()
        {
            DataDeCriacao = DateTimeOffset.Now.ToUnixTimeMilliseconds();
        }

        public long DataDeCriacao { get; set; }

        public Boolean expirou()
        {

            return DateTimeOffset.Now.ToUnixTimeMilliseconds() > DataDeCriacao + ExpiresIn * 1000;
        }


        // dados do json
        [JsonProperty("refresh_token")]
        public string RefreshToken { get; set; }

        [JsonProperty("token_type")]
        public string TokenType { get; set; }

        [JsonProperty("access_token")]
        public string AccessToken { get; set; }

        [JsonProperty("expires_in")]
        public long ExpiresIn { get; set; }
        // dados do json
    }

    public partial class ContaAzulCredModel
    {
        public static ContaAzulCredModel FromJson(string json) => JsonConvert.DeserializeObject<ContaAzulCredModel>(json, Converter.Settings);
    }

    public static class Serialize
    {
        public static string ToJson(this ContaAzulCredModel self) => JsonConvert.SerializeObject(self, Converter.Settings);
    }

    internal static class Converter
    {
        public static readonly JsonSerializerSettings Settings = new JsonSerializerSettings
        {
            MetadataPropertyHandling = MetadataPropertyHandling.Ignore,
            DateParseHandling = DateParseHandling.None,
            Converters =
            {
                new IsoDateTimeConverter { DateTimeStyles = DateTimeStyles.AssumeUniversal }
            },
        };
    }
}
